{% extends 'base.html.twig' %}

{% block title %} {{ parent() }} | Roulette {% endblock %}

{% block body %}
    <div id="roulette-ctrl" ng-controller="RouletteCtrl" layout="column" layout-align="center none" ng-cloak>
        <div class="form-container" ng-show="showForm">
            <md-input-container class="md-block">
                <label for="address">Address</label>
                <input id="address" name="address" title="Address" ng-model="address" placeholder="Enter a location">
            </md-input-container>
            <div layout="column" layout-align="center none">
                <span>Radius</span>
                <md-slider-container>
                    <md-slider flex ng-model="radius" step="50" min="50" max="50000" aria-label="radius"></md-slider>
                    <md-input-container>
                        <input flex type="number" ng-model="radius" aria-label="radius" aria-controls="radius-slider" title="Radius">
                    </md-input-container>
                </md-slider-container>
            </div>
            <md-input-container class="md-block">
                <label for="query">Query</label>
                <input name="query" title="Query" ng-model="query">
            </md-input-container>
            <div layout="column" layout-align="center center">
                <md-button class="md-fab" aria-label="Search" style="padding: 4px;" ng-click="searchRestaurant()">
                    <i class="fab fa-2x fa-searchengin"></i>
                </md-button>
            </div>
        </div>
        <div class="spinner-container" ng-show="showSpinner" layout="row" layout-align="center center">
            <md-progress-circular md-mode="indeterminate" md-diameter="96"></md-progress-circular>
        </div>
        <div id="map-container" layout="column" layout-align="center none" ng-show="showMap">
            <div layout="column" layout-align="center center">
                <md-button class="md-raised md-primary" aria-label="Retry" ng-click="toggleShows(true, false, false)">
                    <i class="fab fa-searchengin"></i> Retry
                </md-button>
            </div>
            <div id="map" style="height: 400px;"></div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">
        // Google Maps
        app.factory('$appGoogleMaps', function () {
            return {
                setupAutocomplete: function (inputId, $scope) {
                    var input = document.getElementById(inputId);
                    var autocomplete = new google.maps.places.Autocomplete(input);

                    input.removeAttribute('placeholder');

                    autocomplete.addListener('place_changed', function() {
                         var place = autocomplete.getPlace();

                         if (place.formatted_address) {
                             $scope.address = place.formatted_address;
                         }
                    });
                },
                createMapForRestaurant: function (containerId, restaurant) {
                    var map = new google.maps.Map(document.getElementById(containerId), {zoom: 4});
                    var infoWindow = new google.maps.InfoWindow();
                    var places = new google.maps.places.PlacesService(map);
                    var getInfoWindowContent = function (place) {
                        return '<div style="height: 100%; width: 100%; text-align: center;"><h2>' + place.name + '</h2>' +
                            '<p>' + place.formatted_address + '</p>' +
                            '<p>' + place.formatted_phone_number + '</p></div>';
                    };

                    places.getDetails({placeId: restaurant.place_id}, function(place, status) {
                        if (status === google.maps.places.PlacesServiceStatus.OK) {
                            var marker = new google.maps.Marker({
                                map: map,
                                position: place.geometry.location,
                                animation: google.maps.Animation.DROP,
                                label: 'R'
                            });
                            map.panTo(place.geometry.location);
                            map.setZoom(15);

                            infoWindow.setContent(getInfoWindowContent(place));
                            infoWindow.open(map, marker);
                        }
                    });
                }
            };
        });
        app.controller('RouletteCtrl', function ($scope, $http, $appErrorHandler, $appGoogleMaps) {
            $scope.address = null;
            $scope.radius = 1000;
            $scope.query = null;
            $scope.showForm = true;
            $scope.showMap = false;
            $scope.showSpinner = false;

            angular.element(function () {
                $appGoogleMaps.setupAutocomplete('address', $scope);
            });

            // Toggle show variables for UI sections
            $scope.toggleShows = function (form, map, spinner) {
                $scope.showForm = form;
                $scope.showMap = map;
                $scope.showSpinner = spinner;
            };
            // Function called before sending request to API
            $scope.beforeSend = function () {
                $scope.toggleShows(false, false, true);
            };
            // Success fallback
            $scope.successRoulette = function (response) {
                $scope.toggleShows(false, true, false);
                $appGoogleMaps.createMapForRestaurant('map', response.data);
            };
            // Error fallback
            $scope.errorRoulette = function (error) {
                $scope.toggleShows(true, false, false);
                $appErrorHandler.render(error.data.message);
            };
            // Send request to API
            $scope.searchRestaurant = function () {
                var payload = {
                    address: $scope.address,
                    radius: $scope.radius
                };

                if (null !== $scope.query) {
                    payload.query = $scope.query;
                }

                $http
                    .post('{{ path('api.games.roulette') }}', payload, {beforeSend: $scope.beforeSend})
                    .then($scope.successRoulette, $scope.errorRoulette);
            };
        });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key={{ maps_js_apikey }}&libraries=places" async defer></script>
{% endblock %}
